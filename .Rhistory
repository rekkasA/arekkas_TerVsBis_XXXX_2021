model = .x$mod[[1]]
)
)
)
tibble(relativeResults) %>%
inner_join(systErrorModels) %>%
group_by(database, stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
pp = map_dfr(
data,
~EmpiricalCalibration::calibrateConfidenceInterval(
logRr = .x$estimate,
seLogRr = .x$seLogRr,
model = .x$mod[[1]]
)
)
) %>% unnest(cols = data)
tibble(relativeResults) %>%
inner_join(systErrorModels) %>%
group_by(database, stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
pp = map_dfr(
data,
~EmpiricalCalibration::calibrateConfidenceInterval(
logRr = .x$estimate,
seLogRr = .x$seLogRr,
model = .x$mod[[1]]
)
)
) %>% unnest(cols = c(data, mod))
tibble(relativeResults) %>%
inner_join(systErrorModels) %>%
group_by(database, stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
pp = map_dfr(
data,
~EmpiricalCalibration::calibrateConfidenceInterval(
logRr = .x$estimate,
seLogRr = .x$seLogRr,
model = .x$mod[[1]]
)
)
) %>% unnest(data) -> mm
mm
tibble(relativeResults) %>%
inner_join(systErrorModels) %>%
group_by(database, stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
pp = map(
data,
~EmpiricalCalibration::calibrateConfidenceInterval(
logRr = .x$estimate,
seLogRr = .x$seLogRr,
model = .x$mod[[1]]
)
)
) %>% unnest(data) -> mm
mm
mm
tibble(relativeResults) %>%
inner_join(systErrorModels) %>%
group_by(database, stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
pp = map(
data,
~EmpiricalCalibration::calibrateConfidenceInterval(
logRr = .x$estimate,
seLogRr = .x$seLogRr,
model = .x$mod[[1]]
)
)
) %>% unnest(pp) -> mm
mm
tibble(relativeResults) %>%
inner_join(systErrorModels) %>%
group_by(database, stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
pp = map(
data,
~EmpiricalCalibration::calibrateConfidenceInterval(
logRr = .x$estimate,
seLogRr = .x$seLogRr,
model = .x$mod[[1]]
)
)
) %>% unnest(c(data, pp)) -> mm
tibble(relativeResults) %>%
inner_join(systErrorModels) %>%
group_by(database, stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
pp = map(
data,
~EmpiricalCalibration::calibrateConfidenceInterval(
logRr = .x$estimate,
seLogRr = .x$seLogRr,
model = .x$mod[[1]]
)
)
) %>% unnest(pp)
tibble(relativeResults) %>%
inner_join(systErrorModels) %>%
group_by(database, stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
pp = map(
data,
~EmpiricalCalibration::calibrateConfidenceInterval(
logRr = .x$estimate,
seLogRr = .x$seLogRr,
model = .x$mod[[1]]
)
)
) %>%
unnest(pp) %>%
select(-data)
calibrateRiskStratified <- tibble(relativeResults) %>%
inner_join(systErrorModels) %>%
group_by(database, stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
pp = map(
data,
~EmpiricalCalibration::calibrateConfidenceInterval(
logRr = .x$estimate,
seLogRr = .x$seLogRr,
model = .x$mod[[1]]
)
)
) %>%
unnest(pp) %>%
select(-data)
calibrateRiskStratified
alibrateRiskStratified %>%
group_by(database, stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
meta = map(
data,
meta::metagen(
TE = .x$logRr,
seTE = .x$seLogRr,
sm = "HR",
method.tau = "PM",
studlab = .x$database
)
)
)
calibrateRiskStratified %>%
group_by(database, stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
meta = map(
data,
meta::metagen(
TE = .x$logRr,
seTE = .x$seLogRr,
sm = "HR",
method.tau = "PM",
studlab = .x$database
)
)
)
calibrateRiskStratified %>%
group_by(database, stratOutcome, estOutcome, riskStratum) %>%
nest()
calibrateRiskStratified %>%
group_by(database, stratOutcome, estOutcome, riskStratum) %>%
nest() -> pp
pp$data[[1]]
calibrateRiskStratified %>%
group_by(stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
meta = map(
data,
meta::metagen(
TE = .x$logRr,
seTE = .x$seLogRr,
sm = "HR",
method.tau = "PM",
studlab = .x$database
)
)
)
calibrateRiskStratified %>%
group_by(stratOutcome, estOutcome, riskStratum) %>%
nest()
calibrateRiskStratified %>%
group_by(stratOutcome, estOutcome, riskStratum) %>%
nest() -> pp
pp$data[[1]]
calibrateRiskStratified %>%
group_by(stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
meta = map(
data,
meta::metagen(
TE = .x$logRr,
seTE = .x$seLogRr,
sm = "HR",
method.tau = "PM",
studlab = .x$database
)
)
)
calibrateRiskStratified %>%
group_by(stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
meta = map(
data,
~meta::metagen(
TE = .x$logRr,
seTE = .x$seLogRr,
sm = "HR",
method.tau = "PM",
studlab = .x$database
)
)
)
calibrateRiskStratified %>%
group_by(stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
meta = map(
data,
~meta::metagen(
TE = .x$logRr,
seTE = .x$seLogRr,
sm = "HR",
method.tau = "PM",
studlab = .x$database
)
)
) %>%
unnest(meta)
calibrateRiskStratified %>%
group_by(stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
meta = map(
data,
~meta::metagen(
TE = .x$logRr,
seTE = .x$seLogRr,
sm = "HR",
method.tau = "PM",
studlab = .x$database
)
)
) %>%
unnest(data)
calibrateRiskStratified %>%
group_by(stratOutcome, estOutcome, riskStratum) %>%
nest() -> pp
data <- pp$data[1]
data
metaRes <- meta::metagen(
TE = data$logRr,
seTE = data$seLogRr,
sm = "HR",
method.tau = "PM",
studlab = data$database
)
data
data$logRr
data
data <- pp$data[[1]]
data
metaRes <- meta::metagen(
TE = data$logRr,
seTE = data$seLogRr,
sm = "HR",
method.tau = "PM",
studlab = data$database
)
metaRes
res <- tibble(
hr = exp(metaRes$TE.random),
lower = exp(metaRes$lower.random),
upper = exp(metaRes$upper.random)
)
res
metaAnalysisRiskStratified <- function(data) {
metaRes <- meta::metagen(
TE = data$logRr,
seTE = data$seLogRr,
sm = "HR",
method.tau = "PM",
studlab = data$database
)
res <- tibble(
hr = exp(metaRes$TE.random),
lower = exp(metaRes$lower.random),
upper = exp(metaRes$upper.random)
)
return(res)
}
calibrateRiskStratified %>%
group_by(stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
meta = map(
data,
~metaAnalysisRiskStratified(.x)
)
)
calibrateRiskStratified %>%
group_by(stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
meta = map(
data,
~metaAnalysisRiskStratified(.x)
)
) %>%
unnest(meta)
calibrateRiskStratified %>%
group_by(stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
meta = map(
data,
~metaAnalysisRiskStratified(.x)
)
) %>%
unnest(meta) %>%
select(-data)
data$logRr
calibrateRiskStratified
relativeResults
library(tidyverse)
negativeControls <- readRDS(
"data/raw/negativeControls.rds"
) %>%
dplyr::filter(
analysisType == "matchOnPs_1_to_4"
) %>%
dplyr::mutate(logRr = log(HR))
relativeResults <- readRDS(
"data/raw/mappedOverallRelativeResults.rds"
) %>%
dplyr::filter(
analysisType == "matchOnPs_1_to_4"
) %>%
mutate(logRr = log(estimate))
systErrorModels <- negativeControls %>%
filter(!is.na(seLogRr)) %>%
group_by(database, stratOutcome, riskStratum) %>%
nest() %>%
mutate(
mod = map(
data,
~EmpiricalCalibration::fitSystematicErrorModel(
logRr = .x$logRr,
seLogRr = .x$seLogRr,
trueLogRr = rep(0, nrow(.x))
)
)
) %>%
select(-data)
calibrateRiskStratified <- tibble(relativeResults) %>%
mutate(estimate = log(estimate)) %>%
inner_join(systErrorModels) %>%
group_by(database, stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
pp = map(
data,
~EmpiricalCalibration::calibrateConfidenceInterval(
logRr = .x$estimate,
seLogRr = .x$seLogRr,
model = .x$mod[[1]]
)
)
) %>%
unnest(pp) %>%
select(-data) # !!!! saveRDS("data/processed/calibrateRiskStratified.rds)
metaAnalysisRiskStratified <- function(data) {
metaRes <- meta::metagen(
TE = data$logRr,
seTE = data$seLogRr,
sm = "HR",
method.tau = "PM",
studlab = data$database
)
res <- tibble(
hr = exp(metaRes$TE.random),
lower = exp(metaRes$lower.random),
upper = exp(metaRes$upper.random)
)
return(res)
}
calibrateRiskStratified %>%
group_by(stratOutcome, estOutcome, riskStratum) %>%
nest() %>%
mutate(
meta = map(
data,
~metaAnalysisRiskStratified(.x)
)
) %>%
unnest(meta) %>%
select(-data)
metaCalibrateRiskStratified <- readRDS("~/Documents/Projects/osteoporosis/data/processed/metaCalibrateRiskStratified.rds")
metaCalibrateRiskStratified
calibrateOverallResults <- readRDS("~/Documents/Projects/osteoporosis/data/processed/calibrateOverallResults.rds")
calibrateOverallResults
metaCalibrateRiskStratified <- readRDS("~/Documents/Projects/osteoporosis/data/processed/metaCalibrateRiskStratified.rds")
metaCalibrateRiskStratified
metaCalibrateRiskStratified <- readRDS(
here::here("data/processed/metaCalibrateRiskStratified.rds")
)
metaCalibrateRiskStratified %>% filter(riskStratum == "Q4, stratOutcome == 101, estOutcome == 101) %>% pull(hr)
metaCalibrateRiskStratified %>% filter(riskStratum == "Q4, stratOutcome == 101, estOutcome == 101) %>% pull(hr)
calibrateRiskStratified
calibrateRiskStratified %>% filter(riskStratum == "Q4", stratOutcome == 101, estOutcome == 101, database == "mdcr")
calibrateRiskStratified %>% filter(riskStratum == "Q4", stratOutcome == 101, estOutcome == 101, database == "mdcr") %>% pull(exp(logRr))
metaCalibrateRiskStratified <- readRDS(
here::here("data/processed/metaCalibrateRiskStratified.rds")
)
calibrateRiskStratified <- readRDS(
here::here("data/processed/calibrateRiskStratified.rds")
) %>%
mutate(
hr = exp(logRr),
lower = exp(logLb95Rr),
upper = exp(logUb95Rr)
)
calibrateRiskStratified
calibrateRiskStratified %>% filter(riskStratum == "Q4", stratOutcome == 101, estOutcome == 101, database == "mdcr")
unique(calibrateRiskStratified$database)
mappedOverallAbsoluteResults <- readRDS("~/Documents/Projects/osteoporosis/data/raw/mappedOverallAbsoluteResults.rds")
mappedOverallAbsoluteResults
mappedOverallAbsoluteResults %>% tibble()
absoluteResults <- readRDS("data/raw/mappedOverallAbsoluteResults.rds")
absoluteResults %>%
filter(
analysisType == "matchOnPs_1_to_4",
stratOutcome == 101,
estOutcome == 101
)
absoluteResults <- readRDS("data/raw/mappedOverallAbsoluteResults.rds") %>%
tibble()
absoluteResults %>%
filter(
analysisType == "matchOnPs_1_to_4",
stratOutcome == 101,
estOutcome == 101
)
hipFractureAbsolute <- readRDS("~/Documents/Projects/osteoporosis/data/processed/hipFractureAbsolute.rds")
readRDS("data/processed/hipFractureAbsolute.rds") %>%
filter(riskStratum == "Q4")
metaCalibrateRiskStratified <- readRDS(
here::here("data/processed/metaCalibrateRiskStratified.rds")
)
calibrateRiskStratified <- readRDS(
here::here("data/processed/calibrateRiskStratified.rds")
) %>%
mutate(
hr = exp(logRr),
lower = exp(logLb95Rr),
upper = exp(logUb95Rr)
)
hipFractureAbsolute <- readRDS("data/processed/hipFractureAbsolute.rds") %>%
filter(riskStratum == "Q4")
hipFractureAbsolute
hipFractureAbsolute %>% filter(database == "mdcr") %>% pull(estimate)
metaCalibrateRiskStratified <- readRDS(
here::here("data/processed/metaCalibrateRiskStratified.rds")
)
calibrateRiskStratified <- readRDS(
here::here("data/processed/calibrateRiskStratified.rds")
) %>%
mutate(
hr = exp(logRr),
lower = exp(logLb95Rr),
upper = exp(logUb95Rr)
)
hipFractureAbsolute <- readRDS("data/processed/hipFractureAbsolute.rds") %>%
filter(riskStratum == "Q4") %>%
mutate(
estimate = 100 * estimate,
lower    = 100 * lower,
upper    = 100 * upper
)
hipFractureAbsolute
hipFractureAbsolute %>% filter(database == "mdcr") %>% pull(estimate)` (`r hipFractureAbsolute %>% filter(database == "mdcr") %>% pull(lower)
hipFractureAbsolute %>% filter(database == "mdcr") %>% pull(estimate)
hipFractureAbsolute %>% filter(database == "mdcr") %>% pull(lower)
hipFractureAbsolute %>% filter(database == "mdcr") %>% pull(upper)
hipFractureAbsolute %>% filter(database == "optum_dod") %>% pull(estimate)
hipFractureAbsolute %>% filter(database == "optum_dod") %>% pull(lower)
hipFractureAbsolute %>% filter(database == "optum_dod") %>% pull(upper)
hipFractureAbsolute %>% filter(database == "panther") %>% pull(estimate)
hipFractureAbsolute %>% filter(database == "panther") %>% pull(lower)
hipFractureAbsolute %>% filter(database == "panther") %>% pull(upper)
library(tidyverse)
library(tidyverse)
library(tidyverse)
metaCalibrateOverall <- readRDS("~/Documents/Projects/osteoporosis/data/processed/metaCalibrateOverall.rds")
metaCalibrateOverall
calibrateOverallResults <- readRDS("~/Documents/Projects/osteoporosis/data/processed/calibrateOverallResults.rds")
calibrateOverallResults
